
bibin.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d2  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000d2  00000166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00800060  000000d2  00000166  2**0
                  ALLOC
  3 .noinit       00000000  00800060  00800060  00000166  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  00000166  2**0
                  CONTENTS
  5 .stab         00000780  00000000  00000000  00000168  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000744  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54 <__ctors_end>
   4:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
   8:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
   c:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  10:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  14:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  18:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  1c:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  20:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  24:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  28:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  2c:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  30:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  34:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  38:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  3c:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  40:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  44:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  48:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  4c:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>
  50:	0c 94 45 00 	jmp	0x8a <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0c 94 50 00 	jmp	0xa0 <main>

0000008a <__bad_interrupt>:
  8a:	0c 94 00 00 	jmp	0x0 <__vectors>

0000008e <delay_ms>:
}

void delay_ms(unsigned char time_ms)
{
	unsigned short delay_count = F_CPU / 4000;
  8e:	2a ef       	ldi	r18, 0xFA	; 250
  90:	30 e0       	ldi	r19, 0x00	; 0

00000092 <L_dl17>:

	unsigned short cnt;
	asm volatile ("\n"
  92:	e2 2f       	mov	r30, r18
  94:	f3 2f       	mov	r31, r19

00000096 <L_dl27>:
  96:	31 97       	sbiw	r30, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <L_dl27>
  9a:	8a 95       	dec	r24
  9c:	d1 f7       	brne	.-12     	; 0x92 <L_dl17>
  9e:	08 95       	ret

000000a0 <main>:
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	8f ef       	ldi	r24, 0xFF	; 255
  aa:	84 bb       	out	0x14, r24	; 20
  ac:	8a bb       	out	0x1a, r24	; 26
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	81 bb       	out	0x11, r24	; 17
  b2:	15 ba       	out	0x15, r1	; 21
  b4:	1b ba       	out	0x1b, r1	; 27
  b6:	18 ba       	out	0x18, r1	; 24
  b8:	12 ba       	out	0x12, r1	; 18
  ba:	88 ec       	ldi	r24, 0xC8	; 200
  bc:	0e 94 47 00 	call	0x8e <delay_ms>
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	8b bb       	out	0x1b, r24	; 27
  c4:	88 bb       	out	0x18, r24	; 24
  c6:	85 bb       	out	0x15, r24	; 21
  c8:	82 bb       	out	0x12, r24	; 18
  ca:	88 ec       	ldi	r24, 0xC8	; 200
  cc:	0e 94 47 00 	call	0x8e <delay_ms>
  d0:	f0 cf       	rjmp	.-32     	; 0xb2 <main+0x12>
